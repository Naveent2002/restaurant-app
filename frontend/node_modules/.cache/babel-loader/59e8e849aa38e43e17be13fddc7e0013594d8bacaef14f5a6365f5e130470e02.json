{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\restaurant-order-system\\\\frontend\\\\src\\\\Components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOrders, updateOrderStatus } from '../redux/actions';\nfunction AdminDashboard() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    orders,\n    loading,\n    error\n  } = useSelector(state => state.orders);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [refreshTime, setRefreshTime] = useState(new Date());\n  const [processingOrders, setProcessingOrders] = useState(new Set());\n  useEffect(() => {\n    dispatch(fetchOrders()).then(() => {\n      setIsInitialLoad(false);\n      setRefreshTime(new Date());\n    }).catch(error => {\n      console.error('Error fetching orders:', error);\n      setIsInitialLoad(false);\n    });\n\n    // Poll for updates every 10 seconds\n    const interval = setInterval(() => {\n      dispatch(fetchOrders()).then(() => {\n        setRefreshTime(new Date());\n      }).catch(error => {\n        console.error('Error in polling orders:', error);\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n  const handleStatusChange = async (orderId, newStatus) => {\n    setProcessingOrders(prev => new Set(prev).add(orderId));\n    try {\n      await dispatch(updateOrderStatus(orderId, newStatus));\n      await dispatch(fetchOrders());\n    } catch (error) {\n      console.error('Error updating order status:', error);\n    } finally {\n      setProcessingOrders(prev => {\n        const updated = new Set(prev);\n        updated.delete(orderId);\n        return updated;\n      });\n    }\n  };\n  const getNextStatus = currentStatus => {\n    switch (currentStatus) {\n      case 'Pending':\n        return 'Cooking';\n      case 'Cooking':\n        return 'Ready';\n      case 'Ready':\n        return 'Delivered';\n      default:\n        return null;\n    }\n  };\n  const getStatusEmoji = status => {\n    switch (status) {\n      case 'Pending':\n        return '⏱️';\n      case 'Cooking':\n        return '🔥';\n      case 'Ready':\n        return '✅';\n      case 'Delivered':\n        return '🚚';\n      default:\n        return '';\n    }\n  };\n  const getButtonClass = status => {\n    switch (status) {\n      case 'Pending':\n        return 'cooking-button';\n      case 'Cooking':\n        return 'ready-button';\n      case 'Ready':\n        return 'delivered-button';\n      default:\n        return '';\n    }\n  };\n  const getButtonText = status => {\n    switch (status) {\n      case 'Pending':\n        return 'Start Cooking';\n      case 'Cooking':\n        return 'Mark Ready';\n      case 'Ready':\n        return 'Mark Delivered';\n      default:\n        return '';\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  const calculateTimeDifference = dateString => {\n    const orderDate = new Date(dateString);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - orderDate) / (1000 * 60));\n    if (diffInMinutes < 60) {\n      return `${diffInMinutes}m ago`;\n    } else {\n      const hours = Math.floor(diffInMinutes / 60);\n      const mins = diffInMinutes % 60;\n      return `${hours}h ${mins}m ago`;\n    }\n  };\n  if (loading && orders.length === 0 && isInitialLoad) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"50\",\n      height: \"50\",\n      viewBox: \"0 0 50 50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: \"25\",\n      cy: \"25\",\n      r: \"20\",\n      stroke: \"#4a90e2\",\n      strokeWidth: \"4\",\n      fill: \"none\",\n      strokeDasharray: \"94.2\",\n      strokeDashoffset: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \"Loading orders...\"));\n  }\n  if (error && isInitialLoad) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, \"\\u274C\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Error Loading Orders\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, error), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"retry-button\",\n      onClick: () => dispatch(fetchOrders()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, \"Retry\"));\n  }\n\n  // Group orders by status\n  const pendingOrders = orders.filter(order => order.status === 'Pending');\n  const cookingOrders = orders.filter(order => order.status === 'Cooking');\n  const readyOrders = orders.filter(order => order.status === 'Ready');\n  const deliveredOrders = orders.filter(order => order.status === 'Delivered');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"Restaurant Management Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, orders.length), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Total Orders\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-box pending-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, pendingOrders.length), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \"Pending\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-box cooking-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, cookingOrders.length), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \"Cooking\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-box ready-stat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, readyOrders.length), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"Ready\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"last-updated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"refreshing-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"Refreshing...\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Last updated: \", refreshTime.toLocaleTimeString()), error && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \" (Error: \", error, \")\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"order-columns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, ['Pending', 'Cooking', 'Ready', 'Delivered'].map(status => {\n    const statusOrders = {\n      Pending: pendingOrders,\n      Cooking: cookingOrders,\n      Ready: readyOrders,\n      Delivered: deliveredOrders\n    }[status];\n    const columnClass = `order-column ${status.toLowerCase()}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: status,\n      className: columnClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, getStatusEmoji(status), \" \", status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, statusOrders.length)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, statusOrders.slice(0, status === 'Delivered' ? 5 : undefined).map(order => {\n      const isProcessing = processingOrders.has(order._id);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: order._id,\n        className: `order-card ${isProcessing ? 'processing' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"order-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 27\n        }\n      }, \"#\", order._id.slice(-6)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"order-time\",\n        title: formatDate(order.createdAt),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 27\n        }\n      }, calculateTimeDifference(order.createdAt))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customer-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customer-avatar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 27\n        }\n      }, order.customerName.charAt(0).toUpperCase()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"customer-details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }\n      }, order.customerName), order.customerPhone && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"customer-phone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 31\n        }\n      }, order.customerPhone))), status !== 'Delivered' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-items\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 27\n        }\n      }, order.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"order-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item-quantity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 33\n        }\n      }, item.quantity, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"item-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 33\n        }\n      }, item.name)))), status === 'Pending' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"total-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 29\n        }\n      }, \"Total:\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"total-amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 29\n        }\n      }, \"$\", order.totalAmount.toFixed(2))), status === 'Delivered' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"delivered-time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 27\n        }\n      }, \"Delivered \", calculateTimeDifference(order.updatedAt)) : /*#__PURE__*/React.createElement(\"button\", {\n        className: `status-button ${getButtonClass(order.status)}`,\n        onClick: () => handleStatusChange(order._id, getNextStatus(order.status)),\n        disabled: isProcessing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 27\n        }\n      }, isProcessing ? 'Updating...' : getButtonText(order.status)));\n    }), status === 'Delivered' && deliveredOrders.length > 5 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"more-orders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }\n    }, \"+\", deliveredOrders.length - 5, \" more orders\"), statusOrders.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"empty-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    }, \"No \", status.toLowerCase(), \" orders\"))));\n  })));\n}\n_s(AdminDashboard, \"6mymKv8+K2ROKFqXljs5qImYd4w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchOrders","updateOrderStatus","AdminDashboard","_s","dispatch","orders","loading","error","state","isInitialLoad","setIsInitialLoad","refreshTime","setRefreshTime","Date","processingOrders","setProcessingOrders","Set","then","catch","console","interval","setInterval","clearInterval","handleStatusChange","orderId","newStatus","prev","add","updated","delete","getNextStatus","currentStatus","getStatusEmoji","status","getButtonClass","getButtonText","formatDate","dateString","date","toLocaleString","calculateTimeDifference","orderDate","now","diffInMinutes","Math","floor","hours","mins","length","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","cx","cy","r","stroke","strokeWidth","fill","strokeDasharray","strokeDashoffset","onClick","pendingOrders","filter","order","cookingOrders","readyOrders","deliveredOrders","toLocaleTimeString","map","statusOrders","Pending","Cooking","Ready","Delivered","columnClass","toLowerCase","key","slice","undefined","isProcessing","has","_id","title","createdAt","customerName","charAt","toUpperCase","customerPhone","items","item","index","quantity","name","totalAmount","toFixed","updatedAt","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/restaurant-order-system/frontend/src/Components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchOrders, updateOrderStatus } from '../redux/actions';\r\n\r\nfunction AdminDashboard() {\r\n  const dispatch = useDispatch();\r\n  const { orders, loading, error } = useSelector((state) => state.orders);\r\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\r\n  const [refreshTime, setRefreshTime] = useState(new Date());\r\n  const [processingOrders, setProcessingOrders] = useState(new Set());\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchOrders())\r\n      .then(() => {\r\n        setIsInitialLoad(false);\r\n        setRefreshTime(new Date());\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching orders:', error);\r\n        setIsInitialLoad(false);\r\n      });\r\n\r\n    // Poll for updates every 10 seconds\r\n    const interval = setInterval(() => {\r\n      dispatch(fetchOrders())\r\n        .then(() => {\r\n          setRefreshTime(new Date());\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error in polling orders:', error);\r\n        });\r\n    }, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch]);\r\n\r\n  const handleStatusChange = async (orderId, newStatus) => {\r\n    setProcessingOrders((prev) => new Set(prev).add(orderId));\r\n\r\n    try {\r\n      await dispatch(updateOrderStatus(orderId, newStatus));\r\n      await dispatch(fetchOrders());\r\n    } catch (error) {\r\n      console.error('Error updating order status:', error);\r\n    } finally {\r\n      setProcessingOrders((prev) => {\r\n        const updated = new Set(prev);\r\n        updated.delete(orderId);\r\n        return updated;\r\n      });\r\n    }\r\n  };\r\n\r\n  const getNextStatus = (currentStatus) => {\r\n    switch (currentStatus) {\r\n      case 'Pending':\r\n        return 'Cooking';\r\n      case 'Cooking':\r\n        return 'Ready';\r\n      case 'Ready':\r\n        return 'Delivered';\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusEmoji = (status) => {\r\n    switch (status) {\r\n      case 'Pending':\r\n        return '⏱️';\r\n      case 'Cooking':\r\n        return '🔥';\r\n      case 'Ready':\r\n        return '✅';\r\n      case 'Delivered':\r\n        return '🚚';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getButtonClass = (status) => {\r\n    switch (status) {\r\n      case 'Pending':\r\n        return 'cooking-button';\r\n      case 'Cooking':\r\n        return 'ready-button';\r\n      case 'Ready':\r\n        return 'delivered-button';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getButtonText = (status) => {\r\n    switch (status) {\r\n      case 'Pending':\r\n        return 'Start Cooking';\r\n      case 'Cooking':\r\n        return 'Mark Ready';\r\n      case 'Ready':\r\n        return 'Mark Delivered';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  const calculateTimeDifference = (dateString) => {\r\n    const orderDate = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInMinutes = Math.floor((now - orderDate) / (1000 * 60));\r\n\r\n    if (diffInMinutes < 60) {\r\n      return `${diffInMinutes}m ago`;\r\n    } else {\r\n      const hours = Math.floor(diffInMinutes / 60);\r\n      const mins = diffInMinutes % 60;\r\n      return `${hours}h ${mins}m ago`;\r\n    }\r\n  };\r\n\r\n  if (loading && orders.length === 0 && isInitialLoad) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\">\r\n          <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n            <circle\r\n              cx=\"25\"\r\n              cy=\"25\"\r\n              r=\"20\"\r\n              stroke=\"#4a90e2\"\r\n              strokeWidth=\"4\"\r\n              fill=\"none\"\r\n              strokeDasharray=\"94.2\"\r\n              strokeDashoffset=\"25\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <p>Loading orders...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && isInitialLoad) {\r\n    return (\r\n      <div className=\"error-container\">\r\n        <div className=\"error-icon\">❌</div>\r\n        <h3>Error Loading Orders</h3>\r\n        <p>{error}</p>\r\n        <button\r\n          className=\"retry-button\"\r\n          onClick={() => dispatch(fetchOrders())}\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Group orders by status\r\n  const pendingOrders = orders.filter((order) => order.status === 'Pending');\r\n  const cookingOrders = orders.filter((order) => order.status === 'Cooking');\r\n  const readyOrders = orders.filter((order) => order.status === 'Ready');\r\n  const deliveredOrders = orders.filter((order) => order.status === 'Delivered');\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1>Restaurant Management Dashboard</h1>\r\n        <div className=\"dashboard-stats\">\r\n          <div className=\"stat-box\">\r\n            <span className=\"stat-value\">{orders.length}</span>\r\n            <span className=\"stat-label\">Total Orders</span>\r\n          </div>\r\n          <div className=\"stat-box pending-stat\">\r\n            <span className=\"stat-value\">{pendingOrders.length}</span>\r\n            <span className=\"stat-label\">Pending</span>\r\n          </div>\r\n          <div className=\"stat-box cooking-stat\">\r\n            <span className=\"stat-value\">{cookingOrders.length}</span>\r\n            <span className=\"stat-label\">Cooking</span>\r\n          </div>\r\n          <div className=\"stat-box ready-stat\">\r\n            <span className=\"stat-value\">{readyOrders.length}</span>\r\n            <span className=\"stat-label\">Ready</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"last-updated\">\r\n          {loading ? (\r\n            <span className=\"refreshing-text\">Refreshing...</span>\r\n          ) : (\r\n            <span>Last updated: {refreshTime.toLocaleTimeString()}</span>\r\n          )}\r\n          {error && <span className=\"error-message\"> (Error: {error})</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"order-columns\">\r\n        {['Pending', 'Cooking', 'Ready', 'Delivered'].map((status) => {\r\n          const statusOrders = {\r\n            Pending: pendingOrders,\r\n            Cooking: cookingOrders,\r\n            Ready: readyOrders,\r\n            Delivered: deliveredOrders,\r\n          }[status];\r\n\r\n          const columnClass = `order-column ${status.toLowerCase()}`;\r\n\r\n          return (\r\n            <div key={status} className={columnClass}>\r\n              <div className=\"column-header\">\r\n                <h3>\r\n                  {getStatusEmoji(status)} {status}\r\n                </h3>\r\n                <div className=\"order-count\">{statusOrders.length}</div>\r\n              </div>\r\n\r\n              <div className=\"column-content\">\r\n                {statusOrders\r\n                  .slice(0, status === 'Delivered' ? 5 : undefined)\r\n                  .map((order) => {\r\n                    const isProcessing = processingOrders.has(order._id);\r\n\r\n                    return (\r\n                      <div\r\n                        key={order._id}\r\n                        className={`order-card ${isProcessing ? 'processing' : ''}`}\r\n                      >\r\n                        <div className=\"order-card-header\">\r\n                          <span className=\"order-id\">#{order._id.slice(-6)}</span>\r\n                          <span\r\n                            className=\"order-time\"\r\n                            title={formatDate(order.createdAt)}\r\n                          >\r\n                            {calculateTimeDifference(order.createdAt)}\r\n                          </span>\r\n                        </div>\r\n\r\n                        <div className=\"customer-info\">\r\n                          <div className=\"customer-avatar\">\r\n                            {order.customerName.charAt(0).toUpperCase()}\r\n                          </div>\r\n                          <div className=\"customer-details\">\r\n                            <strong>{order.customerName}</strong>\r\n                            {order.customerPhone && (\r\n                              <span className=\"customer-phone\">\r\n                                {order.customerPhone}\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {status !== 'Delivered' && (\r\n                          <div className=\"order-items\">\r\n                            {order.items.map((item, index) => (\r\n                              <div key={index} className=\"order-item\">\r\n                                <span className=\"item-quantity\">\r\n                                  {item.quantity}×\r\n                                </span>\r\n                                <span className=\"item-name\">{item.name}</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n\r\n                        {status === 'Pending' && (\r\n                          <div className=\"order-total\">\r\n                            <span className=\"total-label\">Total:</span>\r\n                            <span className=\"total-amount\">\r\n                              ${order.totalAmount.toFixed(2)}\r\n                            </span>\r\n                          </div>\r\n                        )}\r\n\r\n                        {status === 'Delivered' ? (\r\n                          <div className=\"delivered-time\">\r\n                            Delivered {calculateTimeDifference(order.updatedAt)}\r\n                          </div>\r\n                        ) : (\r\n                          <button\r\n                            className={`status-button ${getButtonClass(order.status)}`}\r\n                            onClick={() =>\r\n                              handleStatusChange(order._id, getNextStatus(order.status))\r\n                            }\r\n                            disabled={isProcessing}\r\n                          >\r\n                            {isProcessing ? 'Updating...' : getButtonText(order.status)}\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                {status === 'Delivered' && deliveredOrders.length > 5 && (\r\n                  <div className=\"more-orders\">\r\n                    +{deliveredOrders.length - 5} more orders\r\n                  </div>\r\n                )}\r\n\r\n                {statusOrders.length === 0 && (\r\n                  <div className=\"empty-column\">\r\n                    <p>No {status.toLowerCase()} orders</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}