{"ast":null,"code":"// Menu Reducer\nexport const menuReducer = (state = {\n  items: [],\n  loading: false,\n  error: null\n}, action) => {\n  switch (action.type) {\n    case 'FETCH_MENU_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'FETCH_MENU_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        items: action.payload\n      };\n    case 'FETCH_MENU_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Cart Reducer\nexport const cartReducer = (state = {\n  items: [],\n  totalAmount: 0\n}, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      {\n        const existingItemIndex = state.items.findIndex(item => item._id === action.payload._id);\n        if (existingItemIndex >= 0) {\n          const updatedItems = [...state.items];\n          updatedItems[existingItemIndex] = {\n            ...updatedItems[existingItemIndex],\n            quantity: updatedItems[existingItemIndex].quantity + 1\n          };\n          return {\n            ...state,\n            items: updatedItems,\n            totalAmount: state.totalAmount + action.payload.price\n          };\n        } else {\n          return {\n            ...state,\n            items: [...state.items, {\n              ...action.payload,\n              quantity: 1\n            }],\n            totalAmount: state.totalAmount + action.payload.price\n          };\n        }\n      }\n    case 'REMOVE_FROM_CART':\n      {\n        const itemToRemove = state.items.find(item => item._id === action.payload);\n        if (!itemToRemove) return state;\n        return {\n          ...state,\n          items: state.items.filter(item => item._id !== action.payload),\n          totalAmount: state.totalAmount - itemToRemove.price * itemToRemove.quantity\n        };\n      }\n    case 'UPDATE_CART_ITEM_QUANTITY':\n      {\n        const {\n          itemId,\n          quantity\n        } = action.payload;\n        const itemIndex = state.items.findIndex(item => item._id === itemId);\n        if (itemIndex >= 0) {\n          const item = state.items[itemIndex];\n          const quantityDiff = quantity - item.quantity;\n          const updatedItems = [...state.items];\n          updatedItems[itemIndex] = {\n            ...item,\n            quantity\n          };\n          return {\n            ...state,\n            items: updatedItems,\n            totalAmount: state.totalAmount + item.price * quantityDiff\n          };\n        }\n        return state;\n      }\n    case 'CLEAR_CART':\n      return {\n        items: [],\n        totalAmount: 0\n      };\n    default:\n      return state;\n  }\n};\n\n// Order Reducer\nexport const orderReducer = (state = {\n  orders: [],\n  loading: false,\n  error: null,\n  lastUpdated: null\n}, action) => {\n  switch (action.type) {\n    case 'PLACE_ORDER_REQUEST':\n    case 'FETCH_ORDERS_REQUEST':\n    case 'UPDATE_ORDER_STATUS_REQUEST':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'PLACE_ORDER_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        orders: [action.payload, ...state.orders],\n        lastUpdated: new Date().toISOString()\n      };\n    case 'FETCH_ORDERS_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        orders: action.payload,\n        lastUpdated: new Date().toISOString()\n      };\n    case 'UPDATE_ORDER_STATUS_SUCCESS':\n      {\n        const updatedOrder = action.payload;\n        return {\n          ...state,\n          loading: false,\n          // Ensure we're properly replacing the order with the updated one\n          orders: state.orders.map(order => order._id === updatedOrder._id ? updatedOrder : order),\n          lastUpdated: new Date().toISOString()\n        };\n      }\n    case 'PLACE_ORDER_FAILURE':\n    case 'FETCH_ORDERS_FAILURE':\n    case 'UPDATE_ORDER_STATUS_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["menuReducer","state","items","loading","error","action","type","payload","cartReducer","totalAmount","existingItemIndex","findIndex","item","_id","updatedItems","quantity","price","itemToRemove","find","filter","itemId","itemIndex","quantityDiff","orderReducer","orders","lastUpdated","Date","toISOString","updatedOrder","map","order"],"sources":["C:/Users/Admin/restaurant-order-system/frontend/src/redux/reducers.js"],"sourcesContent":["// Menu Reducer\r\nexport const menuReducer = (state = { items: [], loading: false, error: null }, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_MENU_REQUEST':\r\n      return { ...state, loading: true, error: null };\r\n    case 'FETCH_MENU_SUCCESS':\r\n      return { ...state, loading: false, items: action.payload };\r\n    case 'FETCH_MENU_FAILURE':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Cart Reducer\r\nexport const cartReducer = (state = { items: [], totalAmount: 0 }, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART': {\r\n      const existingItemIndex = state.items.findIndex(\r\n        item => item._id === action.payload._id\r\n      );\r\n            \r\n      if (existingItemIndex >= 0) {\r\n        const updatedItems = [...state.items];\r\n        updatedItems[existingItemIndex] = {\r\n          ...updatedItems[existingItemIndex],\r\n          quantity: updatedItems[existingItemIndex].quantity + 1\r\n        };\r\n                \r\n        return {\r\n          ...state,\r\n          items: updatedItems,\r\n          totalAmount: state.totalAmount + action.payload.price\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          items: [...state.items, { ...action.payload, quantity: 1 }],\r\n          totalAmount: state.totalAmount + action.payload.price\r\n        };\r\n      }\r\n    }\r\n        \r\n    case 'REMOVE_FROM_CART': {\r\n      const itemToRemove = state.items.find(item => item._id === action.payload);\r\n      if (!itemToRemove) return state;\r\n      \r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.payload),\r\n        totalAmount: state.totalAmount - (itemToRemove.price * itemToRemove.quantity)\r\n      };\r\n    }\r\n        \r\n    case 'UPDATE_CART_ITEM_QUANTITY': {\r\n      const { itemId, quantity } = action.payload;\r\n      const itemIndex = state.items.findIndex(item => item._id === itemId);\r\n              \r\n      if (itemIndex >= 0) {\r\n        const item = state.items[itemIndex];\r\n        const quantityDiff = quantity - item.quantity;\r\n        const updatedItems = [...state.items];\r\n                \r\n        updatedItems[itemIndex] = {\r\n          ...item,\r\n          quantity\r\n        };\r\n                \r\n        return {\r\n          ...state,\r\n          items: updatedItems,\r\n          totalAmount: state.totalAmount + (item.price * quantityDiff)\r\n        };\r\n      }\r\n      return state;\r\n    }\r\n        \r\n    case 'CLEAR_CART':\r\n      return { items: [], totalAmount: 0 };\r\n          \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Order Reducer\r\nexport const orderReducer = (state = { orders: [], loading: false, error: null, lastUpdated: null }, action) => {\r\n  switch (action.type) {\r\n    case 'PLACE_ORDER_REQUEST':\r\n    case 'FETCH_ORDERS_REQUEST':\r\n    case 'UPDATE_ORDER_STATUS_REQUEST':\r\n      return { \r\n        ...state, \r\n        loading: true, \r\n        error: null \r\n      };\r\n          \r\n    case 'PLACE_ORDER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        orders: [action.payload, ...state.orders],\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n          \r\n    case 'FETCH_ORDERS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        orders: action.payload,\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n          \r\n    case 'UPDATE_ORDER_STATUS_SUCCESS': {\r\n      const updatedOrder = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        // Ensure we're properly replacing the order with the updated one\r\n        orders: state.orders.map(order => \r\n          order._id === updatedOrder._id ? updatedOrder : order\r\n        ),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n    }\r\n        \r\n    case 'PLACE_ORDER_FAILURE':\r\n    case 'FETCH_ORDERS_FAILURE':\r\n    case 'UPDATE_ORDER_STATUS_FAILURE':\r\n      return { \r\n        ...state, \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n          \r\n    default:\r\n      return state;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}